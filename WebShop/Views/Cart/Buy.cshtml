@using WebShop.Models;
@using WebShop.Context;
@model Purchase
@{
    ViewBag.Title = "Buy";
}

<h2>Buy</h2>
@{
    HttpCookie cookie = Request.Cookies.Get("ShoppingCartId");
    WebShopDb context = new WebShopDb();
    decimal total = 0;
    Cart cartObj = null;
    try
    { 
     cartObj = (from obj in context.Carts // get the cart
                   where obj.ShoppingCartId == cookie.Value
                select obj).FirstOrDefault();
     foreach (var item in cartObj.BoughtItems)
     {
         var itemInDb = context.Items.Find(int.Parse(item.Item));
         total += itemInDb.Price;
     }
   
          }
    catch(Exception ex)
    {
        Response.Redirect("~/Home/Index"); // if cart is empty redirect to index
    }
  
            }

      
@using (Html.BeginForm("Buy","Cart",FormMethod.Post))
{
    @Html.HiddenFor(m=> m.PurchaseID)
         @Html.LabelFor(m => m.FirstName)<br />
         @Html.EditorFor(m => m.FirstName)<br />
         @Html.LabelFor(m => m.LastName)<br />
         @Html.EditorFor(m => m.LastName)<br />
         @Html.LabelFor(m => m.Adress)<br />
         @Html.EditorFor(m => m.Adress)<br />
          @Html.LabelFor(m => m.Phone)<br />
         @Html.EditorFor(m => m.Phone)<br />
          @Html.LabelFor(m => m.Email)<br />
         @Html.EditorFor(m => m.Email)<br />
         @Html.LabelFor(m => m.Information)<br />
         @Html.EditorFor(m => m.Information)<br />
         @Html.LabelFor(m => m.Price)<br />
            @total<br />
@Html.ValidationSummary(false, "", new { @class = "text-danger" })
    <div class="table-responsive">
        <table class="table">
            <thead>
                <tr>
                    <th scope="col">ID</th>
                    <th scope="col">Name</th>
                    <th scope="col">Description</th>
                    <th scope="col">Size</th>
                    <th scope="col">Price</th>
                    <th scope="col">Info</th>
                </tr>
            </thead>
            <tbody>
                @{
                   
                   
  // ITEMS  
  if(cartObj!=null)
  { 
    foreach (var item in cartObj.BoughtItems)
    {
        var itemInDb = context.Items.Find(int.Parse(item.Item)); // get the item from Db
    
        <tr>
            <td>@item.Item</td>
            <td>@itemInDb.Name</td>
            <td>@itemInDb.Description</td>
            <td>@item.Sizes</td>
            <td>@itemInDb.Price</td>
            <td>@itemInDb.AdditionalInformation</td>
        </tr>
    }
    }
    }
              
            </tbody>
        </table>
    </div>
    
    
    
    <input type="submit" value="Make purchase" />
}

